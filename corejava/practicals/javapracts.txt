1a- multiplication table
1b-inverted triangle
1c-area perimeter

2a- add 2 binary numbers
2b- decimal to binary
2c- reverse a string

3a- count
3b- sum of digits
3c- array

4a- asec desc
4b- const/dest
4c- abstract

5a- inheritance
5b- method overriding

6a- package
6b- matrix add
6c- matrix mltiply


111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111


//Practical 1-a
//Write a Java program that takes a number as input and prints its multiplication table upto 10.
import java.util.Scanner; //util - Predefind Package
 
class Pracs1a
{ 
 	public static void main(String[] args) 
	{
		//The Scanner class is used to get user input, and it is found in the java.util package
		Scanner sc = new Scanner(System.in);
   
		System.out.println("--------Multiplication Table--------");
  		System.out.print("Enter a number: ");
  		int num = sc.nextInt();
   
  		for (int i=0; i<10; i++)
		{
   			System.out.println(num + " x " + (i+1) + " = " + (num * (i+1)));
  		}//i
 	}//main()
}//class Pracs1a

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Practical 1-b
/*Write a Java program to display the following pattern
	Reversed Pyramid Star Pattern*/

	class Pracs1b
	{
			public static void main(String[] args)
		{
				int i, j, k, n=5;
		 
				for (i= 0; i<=n-1; i++)
				{
						for (j=0; j<=i; j++) 
						{	
								System.out.print(" ");  //Space
						}//j
						for (k=0; k<=n-1-i; k++)
						{
								System.out.print("*" + " ");
						}//k
						System.out.println(); //Leave a line
				}//i     
		}//main()
	}//class Prac

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	

//Practical 1-c
//Write a Java program to print the area and perimeter of a circle.

import java.util.Scanner; //Package
import java.text.DecimalFormat; // text - Package, DecimalFormat - class
import java.math.RoundingMode;

class Pracs1c
{
	//The java.text.DecimalFormat class is used to format numbers using a formatting pattern you specify yourself
	private static DecimalFormat df2 = new DecimalFormat("#.##");

	public static void main(String [] args)
   	{
		Scanner sc = new Scanner(System.in);

		System.out.print("Enter the radius of circle : ");
		double radius = sc.nextDouble();
		   
		System.out.println("\n--------Area of a Circle--------");   		
      
      	double area = Math.PI * (radius * radius);
      	System.out.println("Area of Circle is " + df2.format(area));

		System.out.println("\n--------Perimeter of a Circle--------");
      
      	double perimeter= 2 * Math.PI *radius;
      	System.out.println("Perimeter of the circle is "+ df2.format(perimeter));
   	}//main()
}//class Pracs1c


22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222


//Practical 2-a
//Write a Java program to add two binary numbers.
import java.util.Scanner;
class Pracs2a 
{
 	public static void main(String[] args)
 	{
  		long num1, num2;
  		int i = 0, remainder = 0;
  		int[] sum = new int[20];

  		Scanner sc = new Scanner(System.in);

		System.out.println("--------Addition of Binary numbers--------");
  		System.out.print("\nBinary number 1 : ");
  		num1 = sc.nextLong();
  		System.out.print("\nBinary number 2 : ");
  		num2 = sc.nextLong();

  		while (num1 != 0 || num2 != 0) 
  		{
   			sum[i++] = (int)((num1 % 10 + num2 % 10 + remainder) % 2);
   			remainder = (int)((num1 % 10 + num2 % 10 + remainder) / 2);
   			num1 = num1 / 10;
   			num2 = num2 / 10;
  		}//while
  
		if (remainder != 0) 
		{
   			sum[i++] = remainder;
  		}//if
  		--i;
  
		System.out.print("\nAddition of two binary numbers : ");
  		while (i >= 0)  
		{
   			System.out.print(sum[i--]);
  		}//while
   		System.out.print("\n");  
 	}//main()
}//class Pracs2a 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//Practical 2-b
//Write a Java program to convert a decimal number to binary number and vice versa.
import java.util.Scanner;
class Pracs2b
{
    	public static void main(String[] args) 
	{
        		Scanner scan = new Scanner(System.in);

			System.out.println("--------Decimal number to Binary number--------");
			System.out.print("\nEnter decimal number : ");
      		int num1 = scan.nextInt();
        		long binary = DecimalToBinary(num1);
        		System.out.println("\n" + num1 + " in decimal = " + binary + " in binary");
		
			System.out.println("\n--------Binary number to Decimal number--------");
			System.out.print("\nEnter binary number : ");
      		int num2 = scan.nextInt();
			int decimal = BinaryToDecimal(num2);
        		System.out.println("\n" + num2 + " in binary = " + decimal + " in decimal ");
    	}//main()

    	public static long DecimalToBinary(int num1)
    	{
        		long binaryNo = 0;
        		int remainder, i = 1, step = 1;

        		while (num1 !=0)
        		{
            			remainder = num1 % 2;
            			num1 /= 2; 
            			binaryNo += remainder * i;
            			i *= 10;
        		}//while
        		return binaryNo;
    	}//DecimalToBinary

	public static int BinaryToDecimal(long num2)
    	{
        		int decimalNo = 0, i = 0;
        		long remainder;
        		while (num2 != 0)
        		{
            			remainder = num2 % 10;
            			num2 /= 10;
            			decimalNo += remainder * Math.pow(2, i);
            			++i;
        		}//while
        		return decimalNo;
    	}//BinaryToDecimal
}//class Pracs2b


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//Practical 2-c
//Write a Java program to reverse a string.
import java.util.*; 
class Pracs2c
{
   	public static void main(String args[])
   	{
      		String str, rev = "";
      		Scanner scan = new Scanner(System.in);
 
			System.out.println("--------Reverse a String--------");
      		System.out.print("\nEnter a string : ");
      		str = scan.nextLine();
 
      		int len = str.length();
 
      		for (int i = len - 1 ; i >= 0 ; i--)
         			rev = rev + str.charAt(i);
 
      		System.out.println("\nReverse of " + str + " is " + rev);
   	}//main()
}//class Pracs2c


3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333


//Practical 3-a
//Write a Java program to count the letters, spaces, numbers and other characters of an input string.
/*
There are many ways to read data from the keyboard -
	- InputStreamReader
	- Console
	- Scanner
	- DataInputStream 
1) BufferedReader class can be used to read data line by line by readLine() method.
2) InputStreamReader class can be used to read data from keyboard.It performs two tasks:
     - connects to input stream of keyboard
     - converts the byte-oriented stream into character-oriented stream
*/
import java.io.*;
class Pracs3a
{
	public static void main(String args[])throws IOException
	{
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));  
		System.out.print("Enter a string : ");
		
		String str=br.readLine();
		int i, len, letters=0, digits=0, others=0, spaces=0;
		char ch;
		len=str.length();
		
		for(i=0; i<len; i++)
		{
			ch=str.charAt(i);
//java.lang.Character.isLetter(char ch) determines if the specified character is a letter
			if(Character.isLetter(ch))
				++letters;
// java.lang.Character.isDigit(char ch) determines if the specified character is a digit.
			else if(Character.isDigit(ch))
				++digits;
			else if(ch==' ')
				++spaces;
			else
				++others;
		}//i

		System.out.println("\nNumber of - ");
		System.out.println("\nLetters = " + letters);
		System.out.println("Digits = " + digits);
		System.out.println("Spaces = " + spaces);
		System.out.println("Other characters = " + others);
	}//main()
}//class Pracs3a

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//Practical 3-b
/*
Implement a Java function that calculates the sum of digits for a given char array consisting of the digits '0' to '9'. The function should return the digit sum as a long value.
*/

import java.util.*;
class Pracs3b
{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter an integer: ");
		String s=sc.nextLine();
		SumOfDigits(s);
	}//main()

	public static void SumOfDigits(String str)
	{
		int sum=0, d=0;

/*toCharArray() method converts the given string into a sequence of characters. 
The returned array length is equal to the length of the string
*/
		char ch[]=str.toCharArray();
		
		for(int i=0;i<str.length();i++)
		{
			if(Character.isDigit(ch[i]))
			{
/*java.lang.Character.getNumericValue(char ch) returns the int value that the specified Unicode character represents*/
				sum+=Character.getNumericValue(ch[i]);
			}//if
		}//i
		
		System.out.println("The sum of the digits is "+ sum);
	}//SumOfDigits()
}//class Pracs3b

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


//Practical 3-c
//Find the smallest and largest element from the array

import java.util.*;
class Pracs3c
{
	public static void main(String args[])
	{
		int large,small,i;
		int a[] = new int[]{101, 2023, 333, 409, 5102};
		int n = a.length;
		large=small=a[0];

		for(i=1;i<n;++i)
		{
			if(a[i]>large)
				large=a[i];

			if(a[i]<small)
				small=a[i];
		}//i
	
		System.out.print("Smallest element : " + small);
		System.out.print("\n\nLargest element : " + large);
	}//main()
}//class Pracs3c


44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444


//Practical 4a
//Designed a class SortData that contains the method asec() and desc().
import java.util.*;
class SortData
{
	Scanner sc=new Scanner(System.in);
	int num,i, arr[], temp=0;
	
	public void GetData()
	{
		System.out.print("Enter the size of the array : ");
		num=sc.nextInt();
		arr=new int[num];
		System.out.println("");

		for(i=0;i<num;i++)
		{
			System.out.print("Enter number "+ (i+1) + " : ");
			arr[i]=sc.nextInt();
		}
	}//GetData

	void SetData()
	{
		System.out.println("\nEntered numbers are : ");
		
		for(i=0;i<num;i++)
		{
			System.out.println(arr[i]);
		}
	}//SetData

	void asec()
	{
	
		for(i=0;i<num;i++)
		{
			for(int j=i+1;j<num;j++)
			{
				if(arr[i]>arr[j])
				{
					temp=arr[i];
					arr[i]=arr[j];
					arr[j]=temp;
				}//if
			}//j
		}//i
	
		System.out.println("\n-------Ascending order-------");

		for(int i=0;i<num;i++)
		{
			System.out.println(arr[i]);
		}//i
	}//asec()

	void desc()
	{
		for(i=0;i<num;i++)
		{
			for(int j=i+1;j<num;j++)
			{
				if(arr[i]<arr[j])
				{
					temp=arr[i];
					arr[i]=arr[j];
					arr[j]=temp;
				}//if
			}//j
		}//i

		System.out.println("\n-------Descending order-------");

		for(int i=0;i<num;i++)
		{
			System.out.println(arr[i]);
		}//i
	}//desc()

	public static void main(String args[])
	{
		SortData obj=new SortData();
		obj.GetData();
		obj.SetData();
		obj.asec();
		obj.desc();
	}//main()
}//SortData



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


4b
//constructor
class Employee
{
	String name;
	int EmpId;

	Employee(Strig name, int EmpId)
	{
		this.name = name;
		this.EmpId=EmpId'
	}
	public static void main(String [] args)
	{
		Employee e1 = new Employee("Ok", 101);
		Employee e2 = new Employee("Google", 102);
		System.out.println("e1 Name- " + e1.name);
		System.out.println("e1 Name- " + e1.empid); 
		System.out.println("\ne2 Name- " + e2.name);
		System.out.println("e2 Name- " + e2.empid);
	}
}




Destructor:
class Destructor 
{
	protected void finalize()
	{
		System.out.println("Object is destroyed by destructor");
	}
	public static void main(String [] args)
	{
		destructor de = new Destructor();
		de = null;
		System.gc();
	} 
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

4C)Write a java program to demonstrate the implementation of abstract class.

import java.util.*;
abstract class BaseClass
{
	public abstract void disp();
}
class DerivedClass_1 extends BaseClass
{
	public void disp()
	{
		System.out.println("This is Derived Class 1");
	} 
}
class DerivedClass_2 extends BaseClass
{
	public void disp()
	{
		System.out.println("This is Derived Class 2");
	}
}
class Demo
{
	public static void main(String[] args)
	{
		DerivedClass_1 d1 = new DerivedClass_1();
		DerivedClass_2 d2 = new DerivedClass_2(); 
		d1.disp();
		d2.disp();
	}
}


5555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555


Practical-5:

A)Write a java program to implement single level inheritance.


class Car
{
	public void engine()
	{
		System.out.println("Car engine : old V4 Engine");
	}
	public void color()
	{
		System.out.println("Car color : Red"); 
	}
}
class BMW extends Car
{
	public void sunroof()
	{
		System.out.println("BMW has a sunroof");
	}
}


class Demo
{
	public static void main(String[] args)
	{
		BMW i8 = new BMW();
		i8.engine();
		i8.color(); 
		i8.sunroof();
	}
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



B)Write a java program to implement method overriding


class Car
{
	public void engine()
	{
		System.out.println("n Car engine : old V4 Engine");
	}
	public void color(String c)
	{
		System.out.println("n Car color : "+c);
	} 
}
class BMW extends Car
{
	public void engine()
	{
		System.out.println("n BMW engine : new V12 Engine");
	}
	public void color(String c)
	{
		System.out.println("n BMW color : "+c);
	}
}





class Demo
{
	public static void main(String[] args) 
	{
		Car i4 = new Car();
		i4.engine();
		i4.color("Red");
		Car i8 = new BMW();
		i8.engine();
		i8.color("White");
	}
}


666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666


Practical-6:

A)Create a package, Add the necessary classes and import the package in java class.

C1.java-
package P1;
public class C1 
{
	public void methodC1()
	{
		System.out.println("methodC1()");
	}
}


C2.java-
package P1;
public class C2
{
	public void methodC2()
	{
		System.out.println("methodC2()");
	}
} 


Test package java-
import P1.C1
importP2.C2
public class Testpackage
{
	public static void main(String [] args)
	{
		C1 a = new C1();
		C2 b = new C2();
		a.methodC1();
		b.methodC2();
	}
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


B)Write a java program to add two matrices and print the 
resultant matrix.

class Pracs6b
{
	public static void main(String arg[])
	{
		Scanner in=new Scanner(System.in);
		int i,j,m,n;
		System.out.print("Enter number of Row : ");
		m=in.nextInt();
		System.out.print("\nEnter number of Column : ");
		n=in.nextInt();
		int a[][]=new int[m][n];
		int b[][]=new int[m][n];
		int c[][]=new int[m][n];
		System.out.println("\nEnter a first matrix:"); 
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				a[i][j]=in.nextInt();
			}
		}
		System.out.println("\nEnter a Second matrix:");
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				b[i][j]=in.nextInt();
			}
		} 
		System.out.println("\nAddition of matrix:");
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				c[i][j]=a[i][j]+b[i][j];
				System.out.print(c[i][j]+" ");
			}
			System.out.println();
		}
	}
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


C)Write a java program for multiplying two matrices and 
print the product for the same.


import java.util.Scanner;
class MatrixMultiplication
{
	public static int[][] matrix()
	{
		Scanner s = new Scanner(System.in);
		int m[][]= new int[2][2];
		for(int i=0; i < 2; i++)
		{
			for(int j=0; j < 2; j++)
			{	
				m[i][j] = s.nextInt();
				System.out.print("t");
			}
			System.out.print("n"); 
		}
		return m;
	}
	public static void main(String[] args)
	{
		int a[][] = new int[2][2];
		int b[][] = new int[2][2];
		int res[][] = new int[2][2];
		System.out.println("n Enter values for first matrix. t");
		a = matrix();
		System.out.println("n Enter values for second matrix. t");
		b = matrix();
		System.out.println("n Resultant matrix. t");
		for(int i=0; i < 2; i++)
		{
			for(int j=0; j < 2; j++)
			{ 
				for(int k=0; k < 2; k++)
				{
					res[i][j] += a[i][k] * b[k][j];
				}
				System.out.print("t" + res[i][j] + "t");
			}
			System.out.print("n");
		}
	}
}
